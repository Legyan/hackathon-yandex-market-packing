name: YM-pack workflow

on:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.11
    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return
        cd backend/src
        pip install -r requirements.txt 
    - name: Test with flake8
      run: |
        cd backend/src
        python -m flake8

  build_and_push_backend_to_docker_hub:
      name: Push backend Docker image to Docker Hub
      runs-on: ubuntu-latest
      needs: tests
      steps:
        - name: Check out the repo
          uses: actions/checkout@v2 
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1 
        - name: Login to Docker 
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.DOCKER_LOGIN }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push to Docker Hub
          uses: docker/build-push-action@v2 
          with:
            context: ./backend
            push: true
            tags: legyan/backend-ym-pack:latest
    
  build_and_push_frontend_to_docker_hub:
    name: Push frontend Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: build_and_push_backend_to_docker_hub
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2 
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1 
      - name: Login to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_LOGIN }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2 
        with:
          context: ./frontend
          push: true
          tags: legyan/frontend-ym-pack:latest

  build_and_push_ds_to_docker_hub:
      name: Push DS Docker image to Docker Hub
      runs-on: ubuntu-latest
      needs: build_and_push_frontend_to_docker_hub
      steps:
        - name: Check out the repo
          uses: actions/checkout@v2 
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1 
        - name: Login to Docker 
          uses: docker/login-action@v1 
          with:
            username: ${{ secrets.DOCKER_LOGIN }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        - name: Push to Docker Hub
          uses: docker/build-push-action@v2 
          with:
            context: ./ds/src
            push: true
            tags: legyan/ds-ym-pack:latest

  deploy:
      runs-on: ubuntu-latest
      needs: build_and_push_ds_to_docker_hub
      steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd infra/
            sudo docker-compose stop
            sudo docker-compose rm backend-ym-pack
            sudo docker-compose rm frontend-ym-pack
            sudo docker-compose rm ds-ym-pack
            sudo docker pull legyan/backend-ym-pack:latest
            sudo docker pull legyan/frontend-ym-pack:latest
            sudo docker pull legyan/ds-ym-pack:latest
            touch .env
            echo DATABASE_URL=${{ secrets.DATABASE_URL }} >> .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo HOST=${{ secrets.HOST }} >> .env
            echo DS_HOST=${{ secrets.DS_HOST }} >> .env
            sudo docker-compose up -d
            sudo docker-compose exec backend-ym-pack alembic upgrade head
            sudo docker-compose exec backend-ym-pack python3 -m app.management.fill_db
            sudo docker-compose exec backend-ym-pack python3 -m app.management.add_orders
            sudo docker-compose exec backend-ym-pack python3 -m app.management.add_random_barcodes

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
